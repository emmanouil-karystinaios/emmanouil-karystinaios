<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts | Emmanouil Karystinaios</title><link>https://emmanouil-karystinaios.github.io/post/</link><atom:link href="https://emmanouil-karystinaios.github.io/post/index.xml" rel="self" type="application/rss+xml"/><description>Posts</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 13 Dec 2020 00:00:00 +0000</lastBuildDate><image><url>https://emmanouil-karystinaios.github.io/media/icon_hu4c3aa08d28a737b1b7fdd38226539d61_369298_512x512_fill_lanczos_center_3.png</url><title>Posts</title><link>https://emmanouil-karystinaios.github.io/post/</link></image><item><title>Harmonic Trajectories in the Tonnetz</title><link>https://emmanouil-karystinaios.github.io/post/tonnetz/</link><pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate><guid>https://emmanouil-karystinaios.github.io/post/tonnetz/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The &lt;strong>PLR operations&lt;/strong> are the foundation of the Tonnetz.
They act on major and minor triads.&lt;br>
&lt;strong>Triad&lt;/strong> is any combination of any three distinct Pitch Classes. In the Neo-Riemannian theory the major and the minor triads are of interest that are equivalent to the groups ${n, ; n+4, ; n+7}$ &amp;amp; ${n, ; n+3, ; n+7 }$ accordingly, where $n \in \mathbb{Z}/12\mathbb{Z}$.
PLR stand for :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>P :&lt;/strong> Parallel.&lt;/li>
&lt;li>&lt;strong>L :&lt;/strong> Leading-Tone Exchange.&lt;/li>
&lt;li>&lt;strong>R :&lt;/strong> Relative.&lt;/li>
&lt;/ul>
&lt;p>These operations/ transformations are the principal transformations of the Neo-Riemmanian theory which was mainly conceived by David Lewin (1933–2003).
The mirror process is relative to the chord intervalic relations not the position of the shape in the circle.&lt;/p>
&lt;h4 id="plr-as-group-operations">PLR as Group Operations&lt;/h4>
&lt;p>The PLR group acts simply transitively on the set {$ n_M,n=0…11$} $\cup$ { $n_m,n=0…11 $} of the 24 major and minor triads, where $n_M$ (resp. $n_m$) represents a major (resp. minor) triad with root n in the usual semi-tone encoding of pitch classes.&lt;/p>
&lt;p>It is isomorphic to the dihedral group D24 of order 24, and is generated by the following two transformations.&lt;/p>
&lt;p>The transformation $L: \mathbb{Z} _{24} \to \mathbb{Z} _{24}$ is called the leading-tone operation, and is such that:&lt;/p>
&lt;p>$$
L(n_M)=(n+4)_m \textrm{ and the complementary } L(n_m)=(n+8)_M &lt;br>
$$&lt;/p>
&lt;p>The transformation $R: \mathbb{Z} _{24} \to \mathbb{Z} _{24}$ is called the relative operation, and is such that:&lt;/p>
&lt;p>$$
R(n_M)=(n+9)_m \textrm{ and similarly the complementary }
$$&lt;/p>
&lt;p>Though not a generator, the operation $P=(RL)3R$, called the parallel operation, is often considered, and is such that $P(n_M)=n_m$&lt;/p>
&lt;h2 id="trajectories-in-the-tonnetz">Trajectories in the Tonnetz&lt;/h2>
&lt;p>The trajectory is defined as a path $\mathcal{X} $ in the Tonnetz $T$, i.e. an ordered list of positions in the space $T$.&lt;/p>
&lt;p>Let us investigate some basic scenarios for trajectory construction.
Placing the first note in the Tonnetz has no bearing on the descriptors we ultimately compute,
so we can simply pick an arbitrary position. Now we consider the case where we have to place two notes:
one of them is placed as in the previous case, and the second one is placed according to a criterion
depending on a distance measure. To this end, we define a function $dist: \mathbb{Z} _{12} \times \mathbb{Z} _{12} \to \mathbb{N}$,
which assigns to the pitch class representation of notes, $x$ and $y$, their distance according to a given Tonnetz as:
\begin{equation}
dist(x, y) =
\begin{cases}
0 &amp;amp; \text{if } x=y \
1 &amp;amp; \text{if } (x-y)\in T \lor (y-x)\in T \
2 &amp;amp; \text{otherwise} &lt;br>
\end{cases}
\end{equation}
Note that, $ dist(x, y) = dist(y, x) $.
By abuse of notation, from now on when referring to notes or chords we automatically consider the numerical representations of their pitch class (PC). They are defined with integer notation, where $C=0$, $C#=1$, $D=2$, etc. Accordingly, chords are PC sets.&lt;/p>
&lt;p>
&lt;figure id="figure-figure-1--the-representation-of-a-c-major-chord-ie-thepitch-class-set-cmaj--0-4-7-in-four-different-ton-netze-the-notes-of-the-chord-are-illustrated-in-blue-theintermediate-edges-and-notes-connecting-the-chord-repre-sentation-are-denoted-in-red-the-note-c--0-is-alwaysplaced-at-point-0-0">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./figs/Cmaj_Tonnetze.png" alt="C major Tonnetze." loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Figure 1 : The representation of a C major chord, i.e. the
pitch class set Cmaj = {0, 4, 7}, in four different Ton-
netze. The notes of the chord are illustrated in blue. The
intermediate edges and notes (connecting the chord repre-
sentation) are denoted in red. The note C = 0 is always
placed at point (0, 0).
&lt;/figcaption>&lt;/figure>
&lt;/p>
&lt;p>Two notes $x, y$ are neighbors if $dist(x, y)=1$. Thus, in the case where two notes are neighbors we find which kind of interval they form and to which Tonnetz axis this interval corresponds. In the case where $dist(x, y)=2$, we define a positioning according to a shared neighbor.
For example, in Tonnetz $T( 1, 2, 9)$, the placement of note E in relation to note C is computed using the shared neighbor D: D is first placed in relation to C, then E is placed in relation to D. This example is illustrated in Figure 1 (horizontal axis). The intermediate neighbors are denoted in red.&lt;/p>
&lt;p>Given a note $x$ and a position $p$ and a fixed Tonnetz $T$, let $\pi(x, p)$ be a positioning function for $T$ which, from the reference position $p$, places the note $x$ as described above.&lt;/p>
&lt;p>We now move on to chords, which we will demonstrate on the simple case of a triad but generalize as well to chords of any size. In Figure 1 a C major chord is represented in 4 different Tonnetze, $T(1, 3, 8)$, $T(1, 2, 9)$, $T(3, 4, 5)$ and $T(2, 3, 7)$. From this representation we can see that in $T(3, 4, 5)$ the chord forms a connected graph while in the other cases the graph is disconnected. In all representations, we place the note $C= 0$ %\Isa{la notation PC n&amp;rsquo;est pas introduite}
at point $(0, 0)$. From there, we place the other notes based on the Tonnetz intervals and periodicity. For example, we first need to find if E and G are neighbors of C in Tonnetz $T$.
For this we consider the following function, which gives the neighbors in the chord $X$ of note $y$ according to Tonnetz $T$:
\begin{equation}
neigh(y, X, T) =
{ x\in X \mid dist(y, x)=1 \text{ in } T} %, &amp;amp; \text{otherwise}
\end{equation}
In the C major scenario, E and G are neighbors of C in Tonnetz $T(3, 4, 5)$ so we can easily find their place in $T$. We define a function which takes a chord $X$ and a position $p$ in a fixed space $T$ and assigns positions to all notes of $X$ as follows:
\begin{equation}
f(X, p) = { \pi(x, p) \mid x \in X }
\end{equation}&lt;/p>
&lt;p>If a chord does not strictly consist of neighboring notes, we
first place notes which are neighbors of $y$, then we attempt to place the remaining notes according to the newly positioned notes, repeating until no more notes can be placed.
%need to consider a system which, for a note $y$ with corresponding position $p_y$, a chord $X$ and a Tonnetz $T$, first finds the neighbors of $y$ and then the neighbors of each neighbor of $y$ in $T$, etc.
If some notes remain to be placed, then one of the remaining notes is placed in relation to an arbitrary already placed note, and the process is repeated. This process is summarized in Algorithm&lt;/p></description></item></channel></rss>